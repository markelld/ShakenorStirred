[{"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/index.js":"1","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/reportWebVitals.js":"2","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/App.js":"3","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/services/index.js":"4","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Footer.jsx":"5","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Recipe.jsx":"6","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Contact.jsx":"7","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Home.jsx":"8","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Show.jsx":"9","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Search.jsx":"10","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/New.jsx":"11","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/ShowStirred.jsx":"12","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Header.jsx":"13"},{"size":627,"mtime":1611367895558,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611156112850,"results":"16","hashOfConfig":"15"},{"size":3626,"mtime":1611510537354,"results":"17","hashOfConfig":"15"},{"size":215,"mtime":1611169294103,"results":"18","hashOfConfig":"15"},{"size":808,"mtime":1611605573201,"results":"19","hashOfConfig":"15"},{"size":722,"mtime":1611522805755,"results":"20","hashOfConfig":"15"},{"size":1537,"mtime":1611593985339,"results":"21","hashOfConfig":"15"},{"size":949,"mtime":1611603083690,"results":"22","hashOfConfig":"15"},{"size":644,"mtime":1611534817879,"results":"23","hashOfConfig":"15"},{"size":769,"mtime":1611603120764,"results":"24","hashOfConfig":"15"},{"size":3547,"mtime":1611603498766,"results":"25","hashOfConfig":"15"},{"size":589,"mtime":1611518285488,"results":"26","hashOfConfig":"15"},{"size":1803,"mtime":1611604470288,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11e4hdb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/index.js",[],["59","60"],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/reportWebVitals.js",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/App.js",["61"],"import axios from \"axios\";  \nimport { baseURL, config } from \"./services/index\";  \nimport { Route } from \"react-router-dom\"; \nimport { useEffect, useState } from \"react\"; \nimport './App.css';\n\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";  \nimport Recipe from \"./components/Recipe\"; \nimport Show from \"./components/Show\";   \nimport ShowStirred from \"./components/ShowStirred\";\nimport Contact from \"./components/Contact\"; \nimport New from \"./components/New\";\nimport Footer from \"./components/Footer\"\n\nfunction App() {  \n  const [cocktails, setCocktails] = useState([]); \n  const [shaken, setShaken] = useState([]);   \n  const [stirred, setStirred] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [search, setSearch] = useState(\"\");  \n  const [toggleFetch, setToggleFetch] = useState(false)\n  //const [toggle, setToggle] = useState(false);\n\n  // const history = useHistory();useHistory import react router dom\n  \n  useEffect(() => { \n    const getCocktails = async () => {\n      const resp = await axios.get(baseURL, config); \n      setCocktails(resp.data.records); \n      //console.log(resp.data.records) \n      getShaken(resp.data.records) \n      getStirred(resp.data.records)\n      // if (localStorage.getItem('searchString').length > 0) { \n      \n      //   searchFilter(localStorage.getItem('searchString'),resp.data.records) \n  \n      // } \n    } \n    getCocktails();   \n  }, [toggleFetch]); \n// function for shaken home button to search cocktail data and go to showpage \n  const getShaken = (shakenData) => {\n    let data = shakenData || cocktails\n    const resultsShaken = data.filter(cocktail => cocktail.fields.type === \"Shaken\")\n    setShaken(resultsShaken)\n    //const shakenCocktails = shaken\n  }  \n// function for stirred home button to search cocktail data and go to showpage \n  const getStirred = (stirredData) => {\n    let data = stirredData || cocktails \n    const resultsStirred = data.filter(cocktail => cocktail.fields.type === \"Stirred\") \n    setStirred(resultsStirred) \n    //const stirredCocktails = stirred\n  }\n\n  const handleChange = (e) => { \n    //console.log(e.target.value) \n    setSearch(e.target.value)\n\n    if (e.target.value.length > 2) {\n      let value = e.target.value\n      searchFilter(value,cocktails) \n\n    }\n  }  \n  const searchFilter = (value, cocktails) => {\n    //console.log(cocktails)\n    \n    \n      const resultsSearch = cocktails.filter(cocktail => cocktail.fields.name.toLowerCase().includes(value.toLowerCase()))\n      console.log(resultsSearch)\n      setSearchResults(resultsSearch)\n      // localStorage.setItem(\"searchString\", value);\n    \n     \n    }\n  \n\n  return (\n    <div className=\"App\">  \n      <Header\n        handleChange={handleChange} \n        search={search} /> \n      <main className=\"body\">\n        <Route exact path=\"/\">\n          <Home \n            getShaken={getShaken}  \n            getStirred={getStirred}\n            searchResults={searchResults}/>\n        </Route> \n        <Route path=\"/show/shaken/\">\n          <Show\n            shaken={shaken} />\n        </Route>  \n        <Route path=\"/showstirred\">\n          <ShowStirred stirred={stirred}/>\n        </Route> \n        <Route path=\"/contact\">\n          <Contact />\n        </Route>  \n        <Route path=\"/new\">\n          <New setToggleFetch={setToggleFetch} /> \n        </Route>  \n        <Route path=\"/recipe/:id\" >\n          <Recipe \n            cocktails={cocktails}\n            shaken={shaken} \n            stirred={stirred}\n          />\n        </Route>  \n      </main> \n    <Footer />\n    </div>\n  );\n}\nexport default App;\n","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/services/index.js",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Footer.jsx",["62","63","64"],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Recipe.jsx",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Contact.jsx",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Home.jsx",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Show.jsx",["65"],"//import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Show(props) { \n  \n  const { shaken, getShaken } = props  \n \n  return ( \n    //create onclick inside H1 that calls function to function and links to recipe page \n    <div className=\"shakenlist\"> \n      <h1>Shaken List</h1>   \n      {shaken && <div>\n      {shaken.map((cocktail) => {\n        return (<Link key={cocktail.id} to={`/recipe/${cocktail.id}`}><div\n          //onClick={() => ........()} link tags goes around cocktail.field.name\n          >{cocktail.fields.name}</div></Link>)\n      })}</div>}  \n    </div>\n  )\n} \n\nexport default Show; \n","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Search.jsx",["66"],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/New.jsx",[],"/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/ShowStirred.jsx",["67"],"import { Link } from \"react-router-dom\";\n//import { useEffect, useState } from \"react\";\n\n\n\n\nfunction ShowStirred(props) { \n\n  const { stirred, getStirred } = props \n  \n\n  console.log(stirred)\n  return (\n    <div className=\"stirredlist\"> \n      <h1>Stirred</h1>\n      {stirred && <div>\n      {stirred.map((cocktail) => {\n        return (<Link key={cocktail.id} to={`/recipe/${cocktail.id}`}><div\n          //onClick={() => ........()} link tags goes around cocktail.field.name\n          >{cocktail.fields.name}</div></Link>)\n      })}</div>}\n      </div>\n  )\n} \n\nexport default ShowStirred;","/Users/markelldehaney/Desktop/general_assembly/allhomework/ShakenorStirred/client/src/components/Header.jsx",["68"],"// import { Link } from \"react-router-dom\"; \n//import Search from \"./Search\" \nimport {LinkContainer} from 'react-router-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'; \nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\n\nfunction Header(props) {\n  return (\n    // <nav className=\"navbar\"> \n    //   <Link className=\"hometext\"  to=\"/\">Shaken or Stirred?</Link> \n    //   <Link className=\"hometext\" to=\"/new\">New Cocktail</Link> \n    //   <Link className=\"hometext\" to=\"/contact\">Contact</Link> \n      // {/* <Search classname=\"searchbar\"\n      //   handleChange={props.handleChange} \n      //   search={props.search} /> */}\n    //  \n  <Navbar collapseOnSelect expand=\"lg\" className=\"color-nav\" > \n    <LinkContainer to=\"/\"> \n      <Navbar.Brand className=\"color-nav\">Shaken or Stirred?</Navbar.Brand>\n    </LinkContainer>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\"> \n      <LinkContainer to=\"/new\">\n        <Nav.Link>New Recipe</Nav.Link>    \n      </LinkContainer>\n      <LinkContainer to=\"/contact\">\n        <Nav.Link>Contact</Nav.Link>    \n      </LinkContainer>\n    </Nav> \n      <Form inline \n        handleChange={props.handleChange} \n        className=\"mr-sm-2\"\n        >\n        <FormControl \n        type=\"text\" \n        placeholder=\"Search\" \n          \n        search={props.search} \n        type=\"text\"\n        name=\"search\"\n        value={props.search} \n        onChange={(e) => props.handleChange(e)}\n        />\n        <Button variant=\"outline-success\">Search</Button>\n      </Form>\n    </Navbar.Collapse>\n  </Navbar>\n  )\n} \n    \n\nexport default Header; \n\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":41,"column":6,"nodeType":"75","endLine":41,"endColumn":19,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":10,"column":11,"nodeType":"79","endLine":10,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":15,"column":11,"nodeType":"79","endLine":15,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":27,"column":1,"nodeType":"82","messageId":"83","endLine":33,"endColumn":11},{"ruleId":"84","severity":1,"message":"85","line":6,"column":19,"nodeType":"86","messageId":"87","endLine":6,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":20,"column":1,"nodeType":"82","messageId":"83","endLine":35,"endColumn":16},{"ruleId":"84","severity":1,"message":"88","line":9,"column":20,"nodeType":"86","messageId":"87","endLine":9,"endColumn":30},{"ruleId":"89","severity":1,"message":"90","line":43,"column":9,"nodeType":"91","endLine":43,"endColumn":20},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getShaken' and 'getStirred'. Either include them or remove the dependency array.","ArrayExpression",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'getShaken' is assigned a value but never used.","Identifier","unusedVar","'getStirred' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [getShaken, getStirred, toggleFetch]",{"range":"97","text":"98"},[1448,1461],"[getShaken, getStirred, toggleFetch]"]